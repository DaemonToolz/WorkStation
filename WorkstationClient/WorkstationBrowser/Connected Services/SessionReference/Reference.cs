//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkstationBrowser.SessionReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersModel", Namespace="http://schemas.datacontract.org/2004/07/Workstation.Model")]
    [System.SerializableAttribute()]
    public partial class UsersModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string emailField;
        
        private int idField;
        
        private System.Nullable<int> team_idField;
        
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> team_id {
            get {
                return this.team_idField;
            }
            set {
                if ((this.team_idField.Equals(value) != true)) {
                    this.team_idField = value;
                    this.RaisePropertyChanged("team_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputValidationFaultContract", Namespace="http://schemas.datacontract.org/2004/07/WorkstationServices.Security")]
    [System.SerializableAttribute()]
    public partial class InputValidationFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectModel", Namespace="http://schemas.datacontract.org/2004/07/Workstation.Model")]
    [System.SerializableAttribute()]
    public partial class ProjectModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long idField;
        
        private string nameField;
        
        private string rootField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string root {
            get {
                return this.rootField;
            }
            set {
                if ((object.ReferenceEquals(this.rootField, value) != true)) {
                    this.rootField = value;
                    this.RaisePropertyChanged("root");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentModel", Namespace="http://schemas.datacontract.org/2004/07/WorkstationMessaging.Model")]
    [System.SerializableAttribute()]
    public partial class DepartmentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int idField;
        
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamModel", Namespace="http://schemas.datacontract.org/2004/07/WorkstationMessaging.Model")]
    [System.SerializableAttribute()]
    public partial class TeamModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<int> department_idField;
        
        private int idField;
        
        private string nameField;
        
        private System.Nullable<long> project_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<int> department_id {
            get {
                return this.department_idField;
            }
            set {
                if ((this.department_idField.Equals(value) != true)) {
                    this.department_idField = value;
                    this.RaisePropertyChanged("department_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<long> project_id {
            get {
                return this.project_idField;
            }
            set {
                if ((this.project_idField.Equals(value) != true)) {
                    this.project_idField = value;
                    this.RaisePropertyChanged("project_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionReference.ISession", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ISession {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/LogIn", ReplyAction="http://tempuri.org/ISession/LogInResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WorkstationBrowser.SessionReference.InputValidationFaultContract), Action="http://tempuri.org/ISession/LogInInputValidationFaultContractFault", Name="InputValidationFaultContract", Namespace="http://schemas.datacontract.org/2004/07/WorkstationServices.Security")]
        WorkstationBrowser.SessionReference.UsersModel LogIn(string Username, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/LogIn", ReplyAction="http://tempuri.org/ISession/LogInResponse")]
        System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.UsersModel> LogInAsync(string Username, string Token);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/ISession/LogOut")]
        void LogOut(WorkstationBrowser.SessionReference.UsersModel user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/ISession/LogOut")]
        System.Threading.Tasks.Task LogOutAsync(WorkstationBrowser.SessionReference.UsersModel user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllProjects", ReplyAction="http://tempuri.org/ISession/GetAllProjectsResponse")]
        WorkstationBrowser.SessionReference.ProjectModel[] GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllProjects", ReplyAction="http://tempuri.org/ISession/GetAllProjectsResponse")]
        System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.ProjectModel[]> GetAllProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllUsers", ReplyAction="http://tempuri.org/ISession/GetAllUsersResponse")]
        WorkstationBrowser.SessionReference.UsersModel[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllUsers", ReplyAction="http://tempuri.org/ISession/GetAllUsersResponse")]
        System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.UsersModel[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllDepartments", ReplyAction="http://tempuri.org/ISession/GetAllDepartmentsResponse")]
        WorkstationBrowser.SessionReference.DepartmentModel[] GetAllDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllDepartments", ReplyAction="http://tempuri.org/ISession/GetAllDepartmentsResponse")]
        System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.DepartmentModel[]> GetAllDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllTeams", ReplyAction="http://tempuri.org/ISession/GetAllTeamsResponse")]
        WorkstationBrowser.SessionReference.TeamModel[] GetAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetAllTeams", ReplyAction="http://tempuri.org/ISession/GetAllTeamsResponse")]
        System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.TeamModel[]> GetAllTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetTeamPerUser", ReplyAction="http://tempuri.org/ISession/GetTeamPerUserResponse")]
        WorkstationBrowser.SessionReference.TeamModel GetTeamPerUser(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetTeamPerUser", ReplyAction="http://tempuri.org/ISession/GetTeamPerUserResponse")]
        System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.TeamModel> GetTeamPerUserAsync(int userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetTeamPerId", ReplyAction="http://tempuri.org/ISession/GetTeamPerIdResponse")]
        WorkstationBrowser.SessionReference.TeamModel GetTeamPerId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISession/GetTeamPerId", ReplyAction="http://tempuri.org/ISession/GetTeamPerIdResponse")]
        System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.TeamModel> GetTeamPerIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionChannel : WorkstationBrowser.SessionReference.ISession, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionClient : System.ServiceModel.ClientBase<WorkstationBrowser.SessionReference.ISession>, WorkstationBrowser.SessionReference.ISession {
        
        public SessionClient() {
        }
        
        public SessionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WorkstationBrowser.SessionReference.UsersModel LogIn(string Username, string Token) {
            return base.Channel.LogIn(Username, Token);
        }
        
        public System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.UsersModel> LogInAsync(string Username, string Token) {
            return base.Channel.LogInAsync(Username, Token);
        }
        
        public void LogOut(WorkstationBrowser.SessionReference.UsersModel user) {
            base.Channel.LogOut(user);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(WorkstationBrowser.SessionReference.UsersModel user) {
            return base.Channel.LogOutAsync(user);
        }
        
        public WorkstationBrowser.SessionReference.ProjectModel[] GetAllProjects() {
            return base.Channel.GetAllProjects();
        }
        
        public System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.ProjectModel[]> GetAllProjectsAsync() {
            return base.Channel.GetAllProjectsAsync();
        }
        
        public WorkstationBrowser.SessionReference.UsersModel[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.UsersModel[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public WorkstationBrowser.SessionReference.DepartmentModel[] GetAllDepartments() {
            return base.Channel.GetAllDepartments();
        }
        
        public System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.DepartmentModel[]> GetAllDepartmentsAsync() {
            return base.Channel.GetAllDepartmentsAsync();
        }
        
        public WorkstationBrowser.SessionReference.TeamModel[] GetAllTeams() {
            return base.Channel.GetAllTeams();
        }
        
        public System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.TeamModel[]> GetAllTeamsAsync() {
            return base.Channel.GetAllTeamsAsync();
        }
        
        public WorkstationBrowser.SessionReference.TeamModel GetTeamPerUser(int userid) {
            return base.Channel.GetTeamPerUser(userid);
        }
        
        public System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.TeamModel> GetTeamPerUserAsync(int userid) {
            return base.Channel.GetTeamPerUserAsync(userid);
        }
        
        public WorkstationBrowser.SessionReference.TeamModel GetTeamPerId(int id) {
            return base.Channel.GetTeamPerId(id);
        }
        
        public System.Threading.Tasks.Task<WorkstationBrowser.SessionReference.TeamModel> GetTeamPerIdAsync(int id) {
            return base.Channel.GetTeamPerIdAsync(id);
        }
    }
}
