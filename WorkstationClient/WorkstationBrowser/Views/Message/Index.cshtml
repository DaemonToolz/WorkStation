@using WorkstationBrowser.SessionReference
@model IEnumerable<WorkstationBrowser.SessionReference.MessageModel>

@{
    ViewBag.Title = "Index";
}


<div class="row" >
    <div class="col-xs-12 col-md-12 col-lg-12">
        <div class=" ">
            @{Html.RenderAction("_Create", new{to = (int)ViewData["to"] }); }
        </div>

    </div>
</div>

<hr/>

<div class="row">
    <div class="col-xs-12 col-md-12 col-lg-12">
        <div class="col-md-2 col-lg-2 col-xs-2">
            <a href="@Url.Action("Index")" class="btn btn-default">    
                <span class="glyphicon glyphicon-refresh"></span> Refresh mailbox
            </a>
        </div>
        
        <div class="col-md-2 col-lg-2 col-xs-2">
            <a href="@Url.Action("MarkAllAsRead")" class="btn btn-default">    
                <span class="glyphicon glyphicon-check"></span> Mark all as read
            </a>
        </div>
        
        <div class="col-md-2 col-lg-2 col-xs-2" >
            <a href="@Url.Action("DeleteAll")" class="btn btn-default">
                <span class="glyphicon glyphicon-trash"></span> Delete all
            </a>
        </div>

        <div class="col-md-2 col-lg-2 col-xs-2" >
            <a href="#" class="btn btn-default">
                <span class="glyphicon glyphicon-send"></span> Sent messages
            </a>
        </div>
        
        <div class="col-md-2 col-lg-2 col-xs-2">
            <a href="#" class="btn btn-default">
                <span class="glyphicon glyphicon-warning-sign"></span> Drafts
            </a>
        </div>

    </div>
</div>

<hr />
<div class="row">
    @for(int i = 0; i < Model.Count(); ++i)
    {
        // Wrong way to do it
        String title = Model.ElementAt(i).title;
        if (title.Contains("'")){
            title = title.Replace("'", @"\'");
        }

        if (title.Contains("\"")){
            title = title.Replace("\"","");
        }



        using (Html.BeginForm("UpdateMessage", "Message", FormMethod.Post))
        {

            String state = "message-read";
            if (!Model.ElementAt(i).read)
            {
                state = "message-notread";
            }
            <div style="margin-bottom:10px;" class="col-lg-5 col-md-5 col-xs-12 col-xs-offset-1 col-md-offset-1 col-lg-offset-1 @(state)">
                
                <p class="pull-right">

                    <a href="#" onclick="reply('@(Model.ElementAt(i).from)', '@Html.Raw(title)')" class="btn btn-default">
                        <span class="fa fa-envelope " style="color: black"></span>
                    </a>
                    <a href="@Url.Action("Index")" class="btn btn-default">
                        <span class="fa fa-comment " style="color: black"></span>
                    </a>
                    <a href="@Url.Action("Index")" class="btn btn-default">
                        <span class="fa fa-anchor" style="color: black"></span>
                    </a>
                    @if (!Model.ElementAt(i).read) {
                        <button type="submit" name="action" value="read" class="btn btn-default">
                            <span class="fa fa-check  " style="color: black"></span>
                        </button>
                    }
                    <button type="submit" name="action" value="delete"class="btn btn-default">
                        <span class="fa fa-times " style="color: red"></span>
                    </button>

                </p>
                @if (Model.ElementAt(i).title == null || !Model.ElementAt(i).title.Any())
                {
                    <h3> <strong> Untitled </strong>
                    </h3>
                }
                else
                {
                    <h3><strong>@Html.DisplayFor(modelItem => Model.ElementAt(i).title)</strong>
                    </h3>
                }

                <h6> From @(((UsersModel[]) ViewData["AllUsers"]).Single(user => user.id == Model.ElementAt(i).from).username) </h6>
                <h6> To @(((UsersModel[]) ViewData["AllUsers"]).Single(user => user.id == Model.ElementAt(i).to).username) </h6>
                <h6> At @Html.DisplayFor(model => Model.ElementAt(i).stamp) </h6>

                @if (Model.ElementAt(i).read)
                {
                    <h6> Read </h6>
                }
                else
                {
                    <h6> Not Read </h6>
                }

                <hr/>

                <p>
                    @Html.DisplayFor(modelItem => Model.ElementAt(i).content)
                </p>

                @Html.HiddenFor(modelItem => Model.ElementAt(i).id)
                @Html.HiddenFor(modelItem => Model.ElementAt(i).from)
                @Html.HiddenFor(modelItem => Model.ElementAt(i).to)
            </div>
         }

    }
</div>


<script>
    function reply(id, title) {
        $("#to").val(id);
        $("#title").text("Re:" + title);
   
    }
</script>