@model IEnumerable<WorkstationBrowser.Models.DocumentModel>

@{
    ViewBag.Title = "ProjectDocuments";

    AjaxOptions ViewOptions = new AjaxOptions(){
        HttpMethod = "POST",
        UpdateTargetId = "text-rendering",
        InsertionMode = InsertionMode.Replace

    };

    AjaxOptions DownloadOptions = new AjaxOptions(){
        HttpMethod = "POST",
    };

    AjaxOptions DeleteOptions = new AjaxOptions()
    {
        HttpMethod = "POST",
    };

}


<hr />
<div class="row">
    <div class="col-xs-12 col-md-12 col-lg-12">

        <a href="@Url.Action("Details", "Project", new{id = (int)ViewData["Projectid"]})" class="btn btn-default">
            <span class="glyphicon glyphicon-arrow-left"></span>
            Project details
        </a>

      
        <a href="@Url.Action("_DocumentCreator", "Project", new{project = (String) ViewData["ProjectName"], projectid = (int)ViewData["Projectid"] })" class="btn btn-success">
            <span class="glyphicon glyphicon-plus"></span>
            Create File
        </a>

        <a href="#" id="UploadFilesLink" class="btn btn-default">
            <span class="glyphicon glyphicon-upload"></span>
            Upload to the current directory
        </a>
        
        <a href="@Url.Action("DownloadAsZip", "Project", new {project = (String) ViewData["ProjectName"]})" class="btn btn-default">
            <span class="glyphicon glyphicon-download"></span>
            Download as Zip
        </a>

   
    </div>
</div>


<hr />
<div class="row" id="FileUploaderDiv">
    @{ Html.RenderPartial("_FileUploader"); }
</div>
<hr />

    <div class="row section-scroll-2">

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Extension)
                </th>
                <th>

                </th>
                <th></th>
            </tr>


            @if (ViewData["RealRoot"] != null && ViewData["RootName"] != null && !ViewData["RootName"].Equals(ViewData["RealRoot"]))
            {
                <tr>
                    <td>@((String)ViewData["RealRoot"])/ </td>
                    <td></td>
                    <td></td>
                    <td>
                        @Html.ActionLink(" ", "ProjectDocuments", "Project", new { project = (String)ViewData["RealRoot"], projectid = (int)ViewData["Projectid"] }, new { @class = "btn btn-default glyphicon glyphicon-folder-open" })

                    </td>

                </tr>

            }

            @if (ViewData["RootName"] != null)
            {
                <tr>
                    <td>@((String)ViewData["RootName"])/ </td>
                    <td></td>
                    <td></td>
                    <td>
                        @Html.ActionLink(" ", "ProjectDocuments", "Project", new { project = (String)ViewData["RootName"], projectid = (int)ViewData["Projectid"] }, new { @class = "btn btn-default glyphicon glyphicon-chevron-up" })

                    </td>


                </tr>

            }



            @foreach (var item in Model)
            {
                // Excluding the backup folder
                if (item.Directory && item.Name.Contains("backup")){
                    continue;
                }
                <tr>
                    <td style="vertical-align:middle;">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td style="vertical-align:middle;">
                        @Html.DisplayFor(modelItem => item.Extension)
                    </td>
                    <td></td>
                    <td style="vertical-align:middle;">
                        @{
                            String tmp = item.Path.Replace("\\", "/");
                        }

                        @if (!item.Directory)
                        {
                            if (item.Extension.Contains("txt") || item.Extension.Contains("html"))
                            {
                                @Html.ActionLink(" ", "_DocumentCreator", "Project",
                            new
                            {
                                project = (String)ViewData["ProjectName"],
                                projectid = (int)ViewData["Projectid"],
                                filename = item.Name,
                                extension = item.Extension,
                                filepath = tmp
                            }, new { @class = "btn btn-default glyphicon glyphicon-cog" })
                            }

                            if (!item.Path.Contains("docx"))
                            {
                                @Ajax.ActionLink(" ", "_FileContent", "Project", new { path = tmp }, ViewOptions, new { @class = "btn btn-default glyphicon glyphicon-eye-open" })
                            }

                            @Html.ActionLink(" ", "Download", "Project", new { path = tmp }, new { @class = "btn btn-default glyphicon glyphicon-cloud-download" })
                            @Html.ActionLink(" ", "_AddComment", "Project", new{ Project = (String)ViewData["ProjectName"], FileName = item.Name, ProjectId = (int)ViewData["Projectid"] }, new{@class="btn btn-default glyphicon glyphicon-comment "})

                            if (item.Path.ToLower().Contains("html") || item.Path.ToLower().Contains("txt")){
                                @Html.ActionLink(" ", "SeeChanges", "Project", new {Project = (String) ViewData["ProjectName"], FileName = item.Name, ProjectId = (int) ViewData["Projectid"]}, new {@class = "btn btn-default glyphicon glyphicon-list "})
                            }
                        }
                        else
                        {
                            @Html.ActionLink(" ", "ProjectDocuments", "Project", new { project = (String)ViewData["ProjectName"] + $"/{item.Name}", projectid = (int)ViewData["Projectid"] }, new { @class = "btn btn-default glyphicon glyphicon-chevron-right" })

                        }

                        @Html.ActionLink(" ", "DeleteFile", "Project", new { path = tmp, project = (String)ViewData["ProjectName"], id = (int)ViewData["Projectid"], isDir = item.Directory }, new { @class = " btn btn-danger glyphicon glyphicon-trash pull-right" })
                    </td>

                </tr>
                            }


        </table>
    </div>


    <hr />

    <div class="row section-scroll-2" id="text-rendering">

    </div>
